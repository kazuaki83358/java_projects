package stopWatch;

import java.awt.Font;
import java.awt.event.*;
import javax.swing.*;

public class Stopwatch implements ActionListener {
    JFrame frame = new JFrame();
    JButton startButton = new JButton("Start");
    JButton resetButton = new JButton("Reset");
    JLabel timeLabel = new JLabel();

    int elapsedtime = 0;
    int seconds = 0;
    int minutes = 0;
    int hours = 0;
    boolean started = false;
    String seconds_string = String.format("%02d", seconds);
    String minutes_string = String.format("%02d", minutes);
    String hour_string = String.format("%02d", hours);
    
    Timer timer = new Timer(1000,new ActionListener() {
		
		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			elapsedtime+=1000;
			hours =(elapsedtime/3600000);
			minutes =(elapsedtime/60000)%60;
			seconds = (elapsedtime/1000)%60;
			String.format("%02d", seconds);
		    String.format("%02d", minutes);
		    String.format("%02d", hours);
		    
		    timeLabel.setText(hour_string+":"+minutes_string+":"+seconds_string); 
			
		}
	});
    
    Stopwatch(){
    	timeLabel.setText(hour_string+":"+minutes_string+":"+seconds_string);
    	timeLabel.setBounds(100,100,200,100);
    	timeLabel.setFont(new Font("Verdana",Font.PLAIN,35));
    	timeLabel.setBorder(BorderFactory.createBevelBorder(1));
    	timeLabel.setOpaque(true);
    	timeLabel.setHorizontalAlignment(JTextField.CENTER);
    	
    	startButton.setBounds(100,200,100,50);
    	startButton.setFont(new Font("Ink Free",Font.PLAIN,20));
    	startButton.setFocusable(false);
    	startButton.addActionListener(this);
    	
    	frame.add(startButton);
    	frame.add(resetButton);

    	resetButton.setBounds(200,200,100,50);
    	resetButton.setFont(new Font("Ink Free",Font.PLAIN,20));
    	resetButton.setFocusable(false);
    	resetButton.addActionListener(this);
    	
    	frame.add(timeLabel);
    	frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    	frame.setSize(420,420);
    	frame.setLayout(null);
    	frame.setVisible(true);

    }

    public void actionPerformed(ActionEvent e) {
        // TODO Auto-generated method stub
    	if (e.getSource()==startButton) {
			start();
		}

    }
    void start() {
    	timer.start();

    }
    void stopwatch() {

    }
    void reset() {

    }

}

